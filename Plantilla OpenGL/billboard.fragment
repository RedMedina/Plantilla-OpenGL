
#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;

// Ouput data
out vec4 color;

uniform sampler2D myTextureSampler;
uniform float time;
uniform float LifeLevel;

void main(){
	// Output color = color of the texture at the specified UV

	vec3 color1a = vec3(0.75, 0.75, 0.75); // Primer color de transición (celeste)
    vec3 color2b = vec3(1.0, 0.5, 0.2); // Segundo color de transición (naranja)
    vec3 color3c = vec3(0.0, 0.0, 0.0); // Tercer color de transición (negro)

	vec3 LightColorr;
	if (time < 0.5) {
        LightColorr = mix(color1a, color2b, time * 2.0);
    } else {
        LightColorr = mix(color2b, color3c, (time - 0.5) * 2.0);
    }

	vec4 colorFinal = texture( myTextureSampler, UV );

	vec4 LightColorWithAlpha = vec4(LightColorr, colorFinal.a);

	float MixValue;
	if(time>0.7)
	{
		MixValue=0.55f;
	}
	else
	{
		MixValue=0.4f;
	}

	color = mix(colorFinal, LightColorWithAlpha, MixValue);

	//color = texture( myTextureSampler, UV );
	
	// Hardcoded life level, should be in a separate texture.
	//if (UV.x < LifeLevel && UV.y > 0.3 && UV.y < 0.7 && UV.x > 0.04 )
	//	color = vec4(0.2, 0.8, 0.2, 1.0); // Opaque green
}