#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;

// Ouput data
out vec4 color;

uniform sampler2D myTextureSampler;
uniform float time;
uniform float time2;

void main(){
	// Output color = color of the texture at the specified UV

	vec3 color1a = vec3(0.75, 0.75, 0.75); // Primer color de transición (celeste)
    vec3 color2b = vec3(1.0, 0.5, 0.2); // Segundo color de transición (naranja)
    vec3 color3c = vec3(0.0, 0.0, 0.0); // Tercer color de transición (negro)

	vec3 LightColorr;
	if (time2 < 0.5) {
        LightColorr = mix(color1a, color2b, time2 * 2.0);
    } else {
        LightColorr = mix(color2b, color3c, (time2 - 0.5) * 2.0);
    }

	float waveAmplitude = 0.03;
	float waveFrequency = 12.0;
	float waveSpeed = 0.1;
	float wave = sin(UV.y * waveFrequency + time * waveSpeed) * waveAmplitude;
	vec2 offset = vec2(0.0, wave);

	vec4 colorFinal = texture( myTextureSampler, UV + offset);

	vec4 LightColorWithAlpha = vec4(LightColorr, colorFinal.a);

	float MixValue;
	if(time2>0.7)
	{
		MixValue=0.5f;
	}
	else
	{
		MixValue=0.25f;
	}

	color = mix(colorFinal, LightColorWithAlpha, MixValue);
}