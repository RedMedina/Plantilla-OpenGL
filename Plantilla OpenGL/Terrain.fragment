#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;

// Ouput data
out vec4 FragColor;

// Values that stay constant for the whole mesh.
uniform sampler2D Texture1;
uniform sampler2D Texture1Normal;
uniform sampler2D Texture2;
uniform sampler2D Texture2Normal;
uniform sampler2D Texture3;
uniform sampler2D Texture3Normal;
uniform sampler2D Blendmap;
uniform sampler2D heightmap;
uniform float time;

void main()
{
     vec4 blendData = texture2D( Blendmap, UV );
     float vBlendr = blendData.r;
     float vBlendg = blendData.g;
     float vBlendb = blendData.b;
     vec4 color1 = vBlendr * texture2D( Texture1, UV * 25.0 );
     vec4 color2 = vBlendg * texture2D( Texture2, UV * 25.0 );
     vec4 color3 = vBlendb * texture2D( Texture3, UV * 25.0 );

     vec3 color1a = vec3(0.75, 0.75, 0.75); // Primer color de transición (celeste)
     vec3 color2b = vec3(1.0, 0.5, 0.2); // Segundo color de transición (naranja)
     vec3 color3c = vec3(0.0, 0.0, 0.0); // Tercer color de transición (negro)
    
    vec3 LightColor;
    if (time < 0.5) {
        LightColor = mix(color1a, color2b, time * 2.0);
    } else {
        LightColor = mix(color2b, color3c, (time - 0.5) * 2.0);
    }

     vec4 FinalColor = color1 + color2 + color3;

     float MixValue;
	if(time>0.7)
	{
		MixValue=0.6f;
	}
	else
	{
		MixValue=0.4f;
	}

     vec4 MixedColor = mix(FinalColor, vec4(LightColor, 1.0), MixValue);

     FragColor = vec4(0.0, 0.0, 0.0, 1.0) + MixedColor;
}